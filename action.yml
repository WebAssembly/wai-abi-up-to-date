name: 'Verify WASI ABI files are up-to-date'
description: 'Verify WASI ABI files are up-to-date'

inputs:
  wit-bindgen:
    description: 'version of the `wit-bindgen` tool to use'
    required: false
    default: '0.17.0'
  worlds:
    description: 'worlds to generate documentation for'
    required: false
    default: '*'

runs:
  using: composite
  steps:
    - name: Setup `wit-bindgen`
      uses: bytecodealliance/actions/wit-bindgen/setup@v1.0.1
      with:
        version: ${{ inputs.wit-bindgen }}

    - name: Setup `wasm-tools`
      uses: bytecodealliance/actions/wasm-tools/setup@v1.0.1
      with:
        version: 1.0.58

    - name: Generate documentation for each world
      shell: bash
      if: ${{ inputs.worlds == '*' }}
      run: wit-bindgen markdown wit --check --html-in-md
      env:
        WIT_REQUIRE_SEMICOLONS: 1

    - name: Generate documentation for each world
      shell: bash
      if: ${{ inputs.worlds != '*' }}
      run: |
        set -ex
        for world in ${{ inputs.worlds }}; do
          wit-bindgen markdown wit -w $world --check --html-in-md
        done

    - name: Print generation instructions
      if: ${{ failure() }}
      shell: bash
      run: |
        echo 'Failed to verity that `*.md` files are up-to-date with'
        echo 'their `wit/*.wit.md` counterparts. The `wit-bindgen` tool needs to'
        echo 'be rerun on this branch and the changes should be committed'
        echo ''
        echo '  cargo install wit-bindgen-cli@{{ inputs.wit-bindgen }}'
        echo '  wit-bindgen markdown wit --html-in-md'
        echo ''
        echo 'That command will regenerate the `*.md` files to get committed here'

    - name: Determine package name
      shell: bash
      id: package
      run: |
        package=$(wasm-tools component wit ./wit| grep package | head -n 1)
        package=$(echo $package | sed 's/package //' | sed 's/;//' | sed 's/:/-/')
        echo "package=$package" >> "$GITHUB_OUTPUT"

    - name: Generate wasm-encoded WIT package
      shell: bash
      run: wasm-tools component wit ./wit --wasm -o ${{ steps.package.outputs.package }}.wasm

    - uses: actions/upload-artifact@v4
      with:
        path: ${{ steps.package.outputs.package }}.wasm

    - name: Release tagged build
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags')
      with:
        files: ${{ steps.package.outputs.package }}.wasm
